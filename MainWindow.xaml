<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Background="#FFF9F9F9"
        UseLayoutRounding="True"
        Title="数据标注工具" Width="851" Height="541">
    <Window.Resources>
        <Style x:Key="sep" TargetType="{x:Type Separator}">
            <Setter Property="Margin" Value="0,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border Height="1" BorderThickness="1" BorderBrush="#999999" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"  Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColIcon" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="ColNext" Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0"
                                                  Margin="5 0"
                                                  x:Name="Icon"
                                                  VerticalAlignment="Center" 
                                                  ContentSource="Icon"/>
                                <Grid Grid.Column="0" 
                                      Visibility="Hidden" 
                                      Margin="5 0" 
                                      x:Name="GlyphPanel"
                                      VerticalAlignment="Center">
                                    <Viewbox VerticalAlignment="Center" FlowDirection="LeftToRight" Width="18" Height="18">
                                        <Path Fill="{TemplateBinding Foreground}" Data="M422.36247 839.786465c-13.320377 13.421684-34.909068 13.421684-48.126091 0l-10.69355-10.800997 0 0-11.398608-11.502985-50.145074-50.544163c-0.097214-0.201591 0-0.500397-0.201591-0.604774L72.380494 533.085224c-13.320377-13.421684-13.320377-35.218106 0-48.535413l72.132854-72.842005c13.319353-13.408381 34.907021-13.408381 48.224328 0l205.814506 209.252815L831.363631 184.208419c13.218046-13.414521 34.806737-13.414521 48.124044 0l72.134901 72.842005c13.317307 13.408381 13.317307 35.113729 0 48.52211L422.36247 839.786465 422.36247 839.786465z"/>
                                    </Viewbox>
                                </Grid>
                                <ContentPresenter Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="HeaderHost"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"/>
                                <ContentPresenter Grid.Column="2"
                                          Margin="8 0"
                                          x:Name="IGTHost"
                                          ContentSource="InputGestureText"
                                          VerticalAlignment="Center"/>
                                <Grid Grid.Column="3" Margin="5 0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>
                                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Right" 
                                       x:Name="SubMenuPopup" 
                                       Focusable="false">
                                    <Border x:Name="SubMenuBorder" BorderBrush="#999999" BorderThickness="1" Padding="2,2,2,2">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6 1"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="ColIcon"/>
                                <Setter Property="Width" Value="Auto" TargetName="ColNext"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="Gray" TargetName="Border"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="Role" Value="TopLevelHeader"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Background" Value="Gray" TargetName="Border"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6 1"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="Padding" Value="5 2"/>
                            </Trigger>
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="Padding" Value="5 2"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="MenuTPL">
            <StackPanel Margin="-30,0,0,0" Background="White"/>
        </ItemsPanelTemplate>
        <Style x:Key="AlertCount1" TargetType="DataGridRow">
            <Setter Property="Background" Value="#F2F2F2" />
            <Setter Property="Height" Value="25"/>
            <Setter Property="Foreground" Value="Black" />
            <Style.Triggers>
                <Trigger Property="AlternationIndex" Value="0" >
                    <Setter Property="Background" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>

                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="LightGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <ObjectDataProvider x:Key="keyShowData"
                            ObjectType="{x:Type sys:Enum}"
                            MethodName="GetValues">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="local:Relation" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Grid Margin="0,1,0,-1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="490*"/>
            <ColumnDefinition Width="361*"/>
        </Grid.ColumnDefinitions>

        <Menu HorizontalAlignment="Left" VerticalAlignment="Top"
              FontSize="16" Foreground="Black" Background="White" Height="33" Width="852" Grid.ColumnSpan="2">
            <MenuItem  Header="文件" HorizontalAlignment="Left" Foreground="Black" Background="White" Width="62" Grid.IsSharedSizeScope="True">
                <MenuItem.Style>
                    <!--去除菜单图标栏-->
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="ItemsPanel" Value="{StaticResource MenuTPL}"/>
                    </Style>
                </MenuItem.Style>
                <MenuItem Header="_打开文件" Click="OpenFile" FontSize="16"  InputGestureText="Ctrl+D" Foreground="Black" Background="White"/>
                <MenuItem Header="_保存文件" Click="SaveFile" FontSize="16"  InputGestureText="Ctrl+S" Foreground="Black" Background="White"/>
                <MenuItem Header="_退出" FontSize="16" HorizontalAlignment="Center" Foreground="Black" Background="White"/>
            </MenuItem>
        </Menu>
        <RichTextBox Name="tokenOutput"    Margin="0,69,-1,307"  FontSize="16" Grid.ColumnSpan="2" >
            <RichTextBox.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Style>
                        <!--去除菜单图标栏-->
                        <Style TargetType="{x:Type ContextMenu}">
                            <Setter Property="ItemsPanel" Value="{StaticResource MenuTPL}"/>
                        </Style>
                    </ContextMenu.Style>
                    <MenuItem Name="entityMark" Header="实体标注" Click="EntityClick">
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem Name="opinionMark" Header="情感标注" Click="OpinionClick"/>

                </ContextMenu>
            </RichTextBox.ContextMenu>

        </RichTextBox>
        <DataGrid Name="dataGrid1" AutoGenerateColumns="False" Margin="10,263,46,11" 
                  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="16" 
                  SelectedIndex="{Binding DataGridIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectionUnit="Cell" 
                  CanUserAddRows="True" IsEnabled="True" RowEditEnding="OnDataComplete">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Style>
                        <!--去除菜单图标栏-->
                        <Style TargetType="{x:Type ContextMenu}">
                            <Setter Property="ItemsPanel" Value="{StaticResource MenuTPL}"/>
                        </Style>
                    </ContextMenu.Style>
                    <MenuItem Name="SaveItem" Header="保存一条" Click="SaveItem_Click">
                    </MenuItem>
                    <Separator></Separator>
                    <MenuItem Name="SaveAllItem" Header="保存所有" Click="SaveAllItem_Click"/>

                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Columns>

                <DataGridTextColumn x:Name="TargetDataGrid" Header="target" Width="150"  Binding="{Binding Path=Target, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn x:Name="OpinionDataGrid" Header="opinion" Width="150" Binding="{Binding Opinion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <!--<DataGridComboBoxColumn Header="sex" SelectedItemBinding="{Binding 性别}" ItemsSource="{Binding Source={StaticResource keySex}}"/>-->
                <!--Combox绑定,获取上面定义的资源keySex.绑定性别-->
                <!--<DataGridComboBoxColumn Header="relation" Width="150" SelectedItemBinding="{Binding Relation}"/>-->
                <DataGridTemplateColumn Header="Relation" x:Name="RelationDataGrid" Width="120">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Path=Relation}"/>
                            <!--显示状态时显示 TextBlock里的值-->
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <!--编辑状态就切换到ComboBox里进行下拉选择操作-->
                            <ComboBox x:Name="taskCombo" ItemsSource="{Binding Source={StaticResource keyShowData}}"  SelectedItem ="{Binding Path=Relation}"  IsSynchronizedWithCurrentItem="False"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTextColumn Header="职务" Width="80" Binding="{Binding 职务, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
            </DataGrid.Columns>
        </DataGrid>
        <Label  Content="原数据" HorizontalAlignment="Left" Margin="0,38,0,0" VerticalAlignment="Top" FontSize="16" Grid.Row="1"/>
        <Label Content="跳转到" FontSize="16" HorizontalAlignment="Left" Margin="54,224,0,0" VerticalAlignment="Top" Grid.Row="3"/>
        <TextBox x:Name="OrgDataId" FontSize="16" HorizontalAlignment="Left" Margin="117,228,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="37" Height="22" Grid.Row="3"/>
        <Button x:Name="ChangeOrgData" FontSize="16" Content="跳转" HorizontalAlignment="Left" Margin="172,228,0,0" VerticalAlignment="Top" Click="ChangeOrgData_Click" Grid.Row="3"/>
        <Button x:Name="PreOrgData" Content="上一条" HorizontalAlignment="Left" Margin="230,228,0,0" VerticalAlignment="Top" FontSize="16" Click="PreOrgData_Click" Grid.Row="3"/>
        <Button x:Name="NextOrgData" Content="下一条" HorizontalAlignment="Left" Margin="304,227,0,0" VerticalAlignment="Top" FontSize="16" Click="NextOrgData_Click" Grid.Row="3"/>
        <ScrollViewer  Margin="1,263,0,11" Grid.Column="1">
            <RichTextBox x:Name="logTextBox" Height="249" Width="343">
                <FlowDocument>
                    <Paragraph>
                        <Run Text=""/>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
        </ScrollViewer>


    </Grid>
</Window>